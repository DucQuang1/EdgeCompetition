NewsTrain = read.csv("NYTimesBlogTrain.csv", stringsAsFactors=FALSE)
NewsTest = read.csv("NYTimesBlogTest.csv", stringsAsFactors=FALSE)
NewsTrainHeadline = read.csv("NewsTrainwHeadline.csv", stringsAsFactors=FALSE)
NewsTestHeadline = read.csv("NewsTestwHeadline.csv", stringsAsFactors=FALSE)
NewsTrain$PubDate = strptime(NewsTrain$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTest$PubDate = strptime(NewsTest$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTrain$Weekday = NewsTrain$PubDate$wday
NewsTest$Weekday = NewsTest$PubDate$wday
NewsTrain$Month = format(NewsTrain$PubDate,"%m")
NewsTest$Month = format(NewsTest$PubDate,"%m")
NewsTrainHeadline$Weekday = NewsTrain$Weekday
NewsTestHeadline$Weekday = NewsTest$Weekday
NewsTrainHeadline$Month = as.numeric(NewsTrain$Month) -9
NewsTestHeadline$Month = as.numeric(NewsTest$Month) - 9
HeadlineWordsLog = glm(Popular ~ ., data=NewsTrainHeadline, family=binomial)
PredTest = predict(HeadlineWordsLog, newdata=NewsTestHeadline, type="response")
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
write.csv(MySubmission, "SubmissionHeadlineLog.csv", row.names=FALSE)
NewsTrain = read.csv("NYTimesBlogTrain.csv", stringsAsFactors=FALSE)
NewsTest = read.csv("NYTimesBlogTest.csv", stringsAsFactors=FALSE)
NewsTrainHeadline = read.csv("NewsTrainwHeadline.csv", stringsAsFactors=FALSE)
NewsTestHeadline = read.csv("NewsTestwHeadline.csv", stringsAsFactors=FALSE)
NewsTrain$PubDate = strptime(NewsTrain$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTest$PubDate = strptime(NewsTest$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTrain$Weekday = NewsTrain$PubDate$wday
NewsTest$Weekday = NewsTest$PubDate$wday
NewsTrain$Month = format(NewsTrain$PubDate,"%m")
NewsTest$Month = format(NewsTest$PubDate,"%m")
NewsTrainHeadline$Weekday = NewsTrain$Weekday
NewsTestHeadline$Weekday = NewsTest$Weekday
NewsTrainHeadline$Month = as.numeric(NewsTrain$Month) -9
NewsTestHeadline$Month = as.numeric(NewsTest$Month) - 9
library(caret)
NewsdeckTrain = predict(dummyVars(~NewsDeck,data = NewsTrainHeadline),newdata =NewsTrainHeadline )
dummyVars(~NewsDeck,data = NewsTrainHeadline)
str(NewsTrainHeadline)
str(NewsTrain)
NewsdeckTrain = predict(dummyVars(~NewsDeck,data = NewsTrain),newdata =NewsTrain)
dummyVars(~ NewsDeck,data = NewsTrain)
NewsdeckTrain = predict(dummyVars(" ~ NewsDeck",data = NewsTrain, fullRank = T),newdata =NewsTrain)
str(NewsTrain)
NewsdeckTrain = predict(dummyVars(" ~ NewsDesk",data = NewsTrain, fullRank = T),newdata =NewsTrain)
NewsdeckTest = predict(dummyVars(" ~ NewsDesk",data = NewsTest, fullRank = T),newdata =NewsTest)
rm(NewsdeckTrain)
rm(NewsdeckTest)
NewsdeskTrain = predict(dummyVars(" ~ NewsDesk",data = NewsTrain, fullRank = T),newdata =NewsTrain)
NewsdeskTest = predict(dummyVars(" ~ NewsDesk",data = NewsTest, fullRank = T),newdata =NewsTest)
dim(NewsdeskTrain)
View(NewsdeskTrain)
View(NewsdeskTest)
str(NewsdeskTest)
NewsdeskTrain = predict(dummyVars(" ~ NewsDesk",data = NewsTrain),newdata =NewsTrain)
NewsdeskTest = predict(dummyVars(" ~ NewsDesk",data = NewsTest),newdata =NewsTest)
View(NewsdeskTest)
View(NewsdeskTrain)
NewsdeskTrain$NewsDeskNational = NULL
View(NewsdeskTrain)
NewsdeskTrain = predict(dummyVars(" ~ NewsDesk",data = NewsTrain),newdata =NewsTrain)
NewsdeskTest = predict(dummyVars(" ~ NewsDesk",data = NewsTest),newdata =NewsTest)
NewsdeskTrain = subset(NewsdeskTrain , -colnames("NewsDeskNational"))
NewsdeskTrain = subset(NewsdeskTrain , colnames("NewsDeskNational"))
library(dplyr)
NewsdeskTrain = select(NewsdeskTrain, -(NewsDeskNational,NewsDeskSports))
NewsdeskTrain = select(NewsdeskTrain, -(NewsDeskNational))
NewsdeskTrain = as.data.fram(predict(dummyVars(" ~ NewsDesk",data = NewsTrain),newdata =NewsTrain))
NewsdeskTrain = as.data.frame(predict(dummyVars(" ~ NewsDesk",data = NewsTrain),newdata =NewsTrain))
NewsdeskTrain = select(NewsdeskTrain, -(NewsDeskNational))
NewsdeskTrain = select(NewsdeskTrain,- (NewsDeskSports))
View(NewsdeskTrain)
NewsdeskTest = as.data.frame(predict(dummyVars(" ~ NewsDesk",data = NewsTest),newdata =NewsTest))
test = cbind(NewsTrainHeadline,NewsdeskTrain)
NewsTrainHeadline = cbind(NewsTrainHeadline,NewsdeskTrain)
NewsTestHeadline = cbind (NewsTestHeadline,NewsdeskTest)
str(NewsTrainHeadline)
str(NewsTestHeadline)
SectionName = as.data.frame(predict(dummyVars(" ~ SectionName",data = NewsTrain),newdata =NewsTrain))
rm(SectionName)
SectionNameTrain = as.data.frame(predict(dummyVars(" ~ SectionName",data = NewsTrain),newdata =NewsTrain))
SectionNameTest = as.data.frame(predict(dummyVars(" ~ SectionName",data = NewsTest),newdata =NewsTest))
str(SectionNameTrain)
str(SectionNameTest)
SectionNameTrain = select(SectionNameTrain, -SectionNameStyle)
SectionNameTrain = select(SectionNameTrain, -SectionNameSports)
dim(SectionNameTrain)
dim(SectionNameTest)
NewsTestHeadline = cbind (NewsTestHeadline,SectionNameTest)
NewsTrain = read.csv("NYTimesBlogTrain.csv", stringsAsFactors=FALSE)
NewsTest = read.csv("NYTimesBlogTest.csv", stringsAsFactors=FALSE)
NewsTrainHeadline = read.csv("NewsTrainwHeadline.csv", stringsAsFactors=FALSE)
NewsTestHeadline = read.csv("NewsTestwHeadline.csv", stringsAsFactors=FALSE)
NewsTrain$PubDate = strptime(NewsTrain$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTest$PubDate = strptime(NewsTest$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTrain$Weekday = NewsTrain$PubDate$wday
NewsTest$Weekday = NewsTest$PubDate$wday
NewsTrain$Month = format(NewsTrain$PubDate,"%m")
NewsTest$Month = format(NewsTest$PubDate,"%m")
#Added back the variable
NewsTrainHeadline$Weekday = NewsTrain$Weekday
NewsTestHeadline$Weekday = NewsTest$Weekday
NewsTrainHeadline$Month = as.numeric(NewsTrain$Month) -9
NewsTestHeadline$Month = as.numeric(NewsTest$Month) - 9
library(caret)
NewsdeskTrain = as.data.frame(predict(dummyVars(" ~ NewsDesk",data = NewsTrain),newdata =NewsTrain))
NewsdeskTest = as.data.frame(predict(dummyVars(" ~ NewsDesk",data = NewsTest),newdata =NewsTest))
library(dplyr)
NewsdeskTrain = select(NewsdeskTrain, -(NewsDeskNational))
NewsdeskTrain = select(NewsdeskTrain,- (NewsDeskSports))
NewsTrainHeadline = cbind(NewsTrainHeadline,NewsdeskTrain)
NewsTestHeadline = cbind (NewsTestHeadline,NewsdeskTest)
SectionNameTrain = as.data.frame(predict(dummyVars(" ~ SectionName",data = NewsTrain),newdata =NewsTrain))
SectionNameTest = as.data.frame(predict(dummyVars(" ~ SectionName",data = NewsTest),newdata =NewsTest))
SectionNameTrain = select(SectionNameTrain, -SectionNameStyle)
SectionNameTrain = select(SectionNameTrain, -SectionNameSports)
NewsTrainHeadline = cbind(NewsTrainHeadline,SectionNameTrain)
NewsTestHeadline = cbind (NewsTestHeadline,SectionNameTest)
SubsectionTrain = as.data.frame(predict(dummyVars(" ~ SubsectionName",data = NewsTrain),newdata =NewsTrain))
SubsectionTest = as.data.frame(predict(dummyVars(" ~ SubsectionName",data = NewsTest),newdata =NewsTest))
str(SubsectionTrain)
str(SubsectionTest)
SubsectionTrain = select(SubsectionTrain, -SubsectionNameFashion & Style)
View(SubsectionTrain)
SubsectionTrain = select(SubsectionTrain, -(SubsectionNameFashion & Style))
SubsectionTrain = select(SubsectionTrain, -("SubsectionNameFashion & Style"))
View(SubsectionTrain)
SubsectionEducation = SubsectionTrain$SubsectionNameEducation
SubsectionTrain = select(SubsectionTrain, -(SubsectionNameEducation:SubsectionNamePolitics))
SubsectionTrain = cbind(subsectionTrain,SubsectionEducation)
SubsectionTrain = cbind(SubsectionTrain,SubsectionEducation)
str(SubsectionTrain)
NewsTrainHeadline = cbind(NewsTrainHeadline,SubsectionTrain)
NewsTestHeadline = cbind (NewsTestHeadline,SubsectionTest)
library(randomForest)
HeadlineWordsRF = randomForest(factor(Popular) ~ ., data=NewsTrainHeadline)
HeadlineWordsRF = randomForest(factor(Popular) ~ ., data=NewsTrainHeadline)
str(NewsTrainHeadline)
View(NewsTrainHeadline)
help(make.names)
make.names(NewsTrainHeadline)
make.names(colnames(NewsTrainHeadline))
colnames(NewsTrainHeadline) = make.names(colnames(NewsTrainHeadline))
str(NewsTrainHeadline)
colnames(NewsTestHeadline) = make.names(colnames(NewsTestHeadline))
library(randomForest)
HeadlineWordsRF = randomForest(factor(Popular) ~ ., data=NewsTrainHeadline)
PredTest = predict(HeadlineWordsRF, newdata=NewsTestHeadline)
NewsTrain = read.csv("NYTimesBlogTrain.csv", stringsAsFactors=FALSE)
NewsTest = read.csv("NYTimesBlogTest.csv", stringsAsFactors=FALSE)
NewsTrainHeadline = read.csv("NewsTrainwHeadline.csv", stringsAsFactors=FALSE)
NewsTestHeadline = read.csv("NewsTestwHeadline.csv", stringsAsFactors=FALSE)
colnames(NewsTrainHeadline) = make.names(colnames(NewsTrainHeadline))
colnames(NewsTestHeadline) = make.names(colnames(NewsTestHeadline))
NewsTrain$PubDate = strptime(NewsTrain$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTest$PubDate = strptime(NewsTest$PubDate, "%Y-%m-%d %H:%M:%S")
NewsTrain$Weekday = NewsTrain$PubDate$wday
NewsTest$Weekday = NewsTest$PubDate$wday
NewsTrain$Month = format(NewsTrain$PubDate,"%m")
NewsTest$Month = format(NewsTest$PubDate,"%m")
#Added back the variable
NewsTrainHeadline$Weekday = NewsTrain$Weekday
NewsTestHeadline$Weekday = NewsTest$Weekday
NewsTrainHeadline$Month = as.numeric(NewsTrain$Month) -9
NewsTestHeadline$Month = as.numeric(NewsTest$Month) - 9
library(caret)
#NewsDeskNational and NewsDeskSports
NewsdeskTrain = as.data.frame(predict(dummyVars(" ~ NewsDesk",data = NewsTrain),newdata =NewsTrain))
NewsdeskTest = as.data.frame(predict(dummyVars(" ~ NewsDesk",data = NewsTest),newdata =NewsTest))
library(dplyr)
NewsdeskTrain = select(NewsdeskTrain, -(NewsDeskNational))
NewsdeskTrain = select(NewsdeskTrain,- (NewsDeskSports))
NewsTrainHeadline = cbind(NewsTrainHeadline,NewsdeskTrain)
NewsTestHeadline = cbind (NewsTestHeadline,NewsdeskTest)
SectionNameTrain = as.data.frame(predict(dummyVars(" ~ SectionName",data = NewsTrain),newdata =NewsTrain))
SectionNameTest = as.data.frame(predict(dummyVars(" ~ SectionName",data = NewsTest),newdata =NewsTest))
SectionNameTrain = select(SectionNameTrain, -SectionNameStyle)
SectionNameTrain = select(SectionNameTrain, -SectionNameSports)
NewsTrainHeadline = cbind(NewsTrainHeadline,SectionNameTrain)
NewsTestHeadline = cbind (NewsTestHeadline,SectionNameTest)
SubsectionTrain = as.data.frame(predict(dummyVars(" ~ SubsectionName",data = NewsTrain),newdata =NewsTrain))
SubsectionTest = as.data.frame(predict(dummyVars(" ~ SubsectionName",data = NewsTest),newdata =NewsTest))
SubsectionEducation = SubsectionTrain$SubsectionNameEducation
str(SubsectionTrain)
colnames(SubsectionTrain) = make.names(colnames(SubsectionTrain))
colnames(SubsectionTest) = make.names(colnames(SubsectionTest))
str(SubsectionTrain)
str(SubsectionTest)
SubsectionTrain = select(SubsectionTrain, -(SubsectionNameFashion...Style:SubsectionNamePolitics))
str(SubsectionTest)
str(SubsectionTrain)
NewsTrainHeadline = cbind(NewsTrainHeadline,SubsectionTrain)
NewsTestHeadline = cbind (NewsTestHeadline,SubsectionTest)
colnames(NewsTrainHeadline) = make.names(colnames(NewsTrainHeadline))
colnames(NewsTestHeadline) = make.names(colnames(NewsTestHeadline))
library(randomForest)
HeadlineWordsRF = randomForest(factor(Popular) ~ ., data=NewsTrainHeadline)
PredTest = predict(HeadlineWordsRF, newdata=NewsTestHeadline)
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
str(MySubmission)
View(MySubmission)
write.csv(MySubmission, "SubmissionHeadlineRF.csv", row.names=FALSE)
HeadlineWordsLog = glm (Popular~. , data = NewsTrainHeadline, family= binomial)
PredTest = predict(HeadlineWordsLog, newdata=NewsTestHeadline, type="response")
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
write.csv(MySubmission, "SubmissionHeadlineLog.csv", row.names=FALSE)
View(MySubmission)
View(MySubmission)
View(MySubmission)
plot(MySubmission$Probability1)
PredTest = predict(HeadlineWordsLog, newdata=NewsTestHeadline, type="classification")
PredTest = predict(HeadlineWordsLog, newdata=NewsTestHeadline, type="response")
PredTest = PredTest > 0.6
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
write.csv(MySubmission, "SubmissionHeadlineLog.csv", row.names=FALSE)
View(MySubmission)
PredTest = as.numeric(PredTest > 0.6)
PredTest = as.numeric(PredTest > 0.6)
View(MySubmission)
PredTest = as.numeric(PredTest > 0.6)
View(PredTest)
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
View(MySubmission)
PredTest = predict(HeadlineWordsRF, newdata=NewsTestHeadline, type = "prob")
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
write.csv(MySubmission, "SubmissionHeadlineRF.csv", row.names=FALSE)
View(MySubmission)
str(PredTest)
PredTest = as.data.frame(predict(HeadlineWordsRF, newdata=NewsTestHeadline, type = "prob"))
View(PredTest)
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest$1)
View(PredTest)
PredTest$1
PredTest[,2]
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest[,2])
View(MySubmission)
HeadlineWordsLog = glm (Popular~. , data = NewsTrainHeadline, family= binomial)
PredTest = predict(HeadlineWordsLog, newdata=NewsTestHeadline, type="response")
MySubmission = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
View(MySubmission)
HeadlineWordsRF = randomForest(factor(Popular) ~ ., data=NewsTrainHeadline)
rm (MySubmission)
PredTest = as.data.frame(predict(HeadlineWordsRF, newdata=NewsTestHeadline, type = "prob"))
MySubmissionRF = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest[,2])
write.csv(MySubmission, "SubmissionHeadlineRF.csv", row.names=FALSE)
write.csv(MySubmissionRF, "SubmissionHeadlineRF.csv", row.names=FALSE)
HeadlineWordsLog = glm (Popular~. , data = NewsTrainHeadline, family= binomial)
PredTest = predict(HeadlineWordsLog, newdata=NewsTestHeadline, type="response")
MySubmissionLog = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
write.csv(MySubmissionLog, "SubmissionHeadlineLog.csv", row.names=FALSE)
plot(MySubmissionRF$Probability1)
plot(MySubmissionLog$Probability1)
library(party)
HeadlineWordsCtree = ctree(Popular~., data = NewsTrainHeadline)
PredTest = predict(HeadlineWordsCtree, newdata = NewsTestHeadline)
View(PredTest)
plot(PredTest)
write.csv(MySubmissionCtree, "SubmissionHeadlineCtree.csv", row.names=FALSE)
write.csv(MySubmissionCtree, "SubmissionHeadlineCtree.csv", row.names=FALSE)
MySubmissionCtree = data.frame(UniqueID = NewsTest$UniqueID, Probability1 = PredTest)
write.csv(MySubmissionCtree, "SubmissionHeadlineCtree.csv", row.names=FALSE)
View(MySubmissionCtree)
colnames(MySubmissionCtree) = c("UniqueID","Probability1")
write.csv(MySubmissionCtree, "SubmissionHeadlineCtree.csv", row.names=FALSE)
View(MySubmissionCtree)
plot(MySubmissionCtree$Probability1)
write,csv (NewsTestHeadline, "AddedNewsTest.csv", row.names = FALSE)
write.csv(NewsTrainHeadline, "AddedNewsTrain.csv", row.names = FALSE)
write.csv (NewsTestHeadline, "AddedNewsTest.csv", row.names = FALSE)
modelglm = glm (Popular~., data = trainSet,family = "binomial")
str(NewsTrainHeadline)
TrainHeadline = read.csv("NewsTrainwHeadline.csv", stringsAsFactors=FALSE)
str(TrainHeadline)
install.packages("modeltools")
install.packages("party")
